#!/usr/bin/env bash
# shellcheck source-path=..

k8s_oidc() {
  set -eo pipefail; shopt -s inherit_errexit
  local pkgroot; pkgroot=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")
  source "$pkgroot/common.sh"

  DOC="Output OIDC credentials for a cluster
Usage:
  bitwarden-k8s-oidc [options] ITEMNAME

Options:
  --cache-for=SECONDS   Cache item with socket-credential-cache [default: 0]
"
# docopt parser below, refresh this parser with `docopt.sh bitwarden-k8s-oidc`
# shellcheck disable=2016,2086,2317,1090,1091,2034
docopt() { local v='2.0.1'; source \
"$pkgroot/.upkg/docopt-lib.sh/docopt-lib.sh" "$v" || { ret=$?;printf -- "exit \
%d\n" "$ret";exit "$ret";};set -e;trimmed_doc=${DOC:0:171};usage=${DOC:38:46}
digest=1500c;options=(' --cache-for 1');node_0(){ value __cache_for 0;}
node_1(){ value ITEMNAME a;};node_2(){ optional 0;};node_3(){ sequence 2 1;}
cat <<<' docopt_exit() { [[ -n $1 ]] && printf "%s\n" "$1" >&2;printf "%s\n" \
"${DOC:38:46}" >&2;exit 1;}';local varnames=(__cache_for ITEMNAME) varname;for \
varname in "${varnames[@]}"; do unset "var_$varname";done;parse 3 "$@";local \
p=${DOCOPT_PREFIX:-''};for varname in "${varnames[@]}"; do unset "$p$varname"
done;eval $p'__cache_for=${var___cache_for:-0};'$p'ITEMNAME=${var_ITEMNAME:-};'
local docopt_i=1;[[ $BASH_VERSION =~ ^4.3 ]] && docopt_i=2;for \
((;docopt_i>0;docopt_i--)); do for varname in "${varnames[@]}"; do declare -p \
"$p$varname";done;done;}
# docopt parser above, complete command for generating this parser is `docopt.sh --library='"$pkgroot/.upkg/docopt-lib.sh/docopt-lib.sh"' bitwarden-k8s-oidc`
  eval "$(docopt "$@")"
  # shellcheck disable=2154
  eval "$(bitwarden-fields -e --cache-for="$__cache_for" "$ITEMNAME" oidc-issuer-url oidc-client-id oidc-client-secret)"
  # shellcheck disable=2154
  kubectl \
    oidc-login \
    get-token \
    --oidc-issuer-url="$oidc_issuer_url" \
    --oidc-client-id="$oidc_client_id" \
    --oidc-client-secret="$oidc_client_secret"
}

k8s_oidc "$@"
